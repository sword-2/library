#!/data/data/com.termux/files/usr/bin/bash
#The purpose is to merge a single lines many of which had separated into fragments on separate lines/
#The logic was simple to test first character for a number as in the reference (1:1). If not a number, content is concatenated. Also, blank lines are skipped.
#It is not perfect as references might not always appear at the beginning of a line. 

source ./cfile.adom #methods and variables pertaining to chapter file(s)
lineCat=$'\0' #storage to concatenate lines perceived to have split or separated

main() {
  rpt='999-lineBreaks.txt'
  #dir='../01-Genesis' fs=1 ls=50
  #dir='../02-Exodus' fs=1 ls=40
  #dir='../03-Leviticus' fs=1 ls=27
  #dir='../04-Numbers' fs=1 ls=36
  #dir='../05-Deuteronomy' fs=1 ls=34
  #dir='../06-Joshua' fs=1 ls=24
  #dir='../07-Judges' fs=1 ls=21
  #dir='../08-Ruth' fs=1 ls=4
  #dir='../09-1Samuel' fs=1 ls=31
  #dir='../10-2Samuel' fs=1 ls=24
  #dir='../11-1Kings' fs=1 ls=22
  #dir='../12-2Kings' fs=25 ls=25
  #dir='../13-1Chronicles' fs=1 ls=29
  #dir='../14-2Chronicles' fs=1 ls=36
  #dir='../15-Ezra' fs=1 ls=10
  #dir='../16-Nehemiah' fs=1 ls=13
  #dir='../17-Esther' fs=1 ls=10
  #dir='../18-Job' fs=1 ls=42
  #dir='../19-Psalms' fs=1 ls=150
  #dir='../20-Proverbs' fs=1 ls=31
  #dir='../21-Ecclesiastes' fs=1 ls=12
  #dir='../22-SongOfSolomon' fs=1 ls=8
  #dir='../23-Isaiah' fs=1 ls=66
  #dir='../24-Jeremiah' fs=1 ls=52
  #dir='../25-Lamentations' fs=1 ls=5
  #dir='../26-Ezekiel' fs=1 ls=48
  #dir='../27-Daniel' fs=1 ls=12
  #dir='../28-Hosea' fs=1 ls=14
  #dir='../29-Joel' fs=1 ls=3
  #dir='../30-Amos' fs=1 ls=9
  #dir='../31-Obadiah' fs=1 ls=1
  #dir='../32-Jonah' fs=1 ls=4
#dir='../33-Micah' fs=1 ls=7
#dir='../34-Nahum' fs=1 ls=3
#dir='../35-Habakkuk' fs=1 ls=3
#dir='../36-Zephaniah' fs=1 ls=3
#dir='../37-Haggai' fs=1 ls=2
#dir='../38-Zechariah' fs=1 ls=14
dir='../39-Malachi' fs=1 ls=4

  #remove any previous if present
  \rm "$dir/*-mod"
  echo 'main: calling lineBreaks'
  lineBreaks $dir $rpt $fs $ls
  #close any file descriptors
  exec 4<&- #to a chapter file
  echo '.....end of line break analsysi'
} #end main()

formatTbd() {
if [[ $cLINE == [0-9]* ]]; then
  #likely a reference chapter:verse
  #output last remembered lines and start new remembering new content set
  echo 'outputting verse:'$lineCat
  echo "$lineCat" >> "$1/$cFrmt-mod"
  lineCat=  #clear previous content
  if ! [ -z $cLINE ]; then
    lineCat=$cLINE #remember new content
  fi
else
  #continue concatenating
  #echo 'not ref (chap:verse), continue concatenating'
  if ! [ -z $cLINE ]; then
    lineCat="$lineCat $cLINE"
  fi
fi
} #end formatTbd()

lineBreaks() {
#Check for line breaks in chapters

#INITIALIZATION
#global variable w/o keyword local
rfile="$1/$2" #report file
g_deleteFile $rfile #delete old report file if one exists

cfile_init $3 $4 #sets cfirst, clast, ccurent, cFrmt
cfile_fd "$1" #set fd 4

while true; do
echo 'calling cfile_read with :'$1
cfile_read $1
ec=$?
if [ $ec -ne 0 ]; then
  #exit code echo 'after cfile_read'
  #end of file(s), quit
  echo 'lineBreaks: cfile_read not successful'
  break
else #analyze content
  echo 'lineBreaks: calling formatTbd'
  formatTbd $1
fi
done
#In case there was remaining content left in a variable, output it.
echo 'lineBreaks: end of while loop'
echo "$lineCat" >> "$1/$cFrmt-mod"
} #end lineBreaks()


main "$@" #call main function
