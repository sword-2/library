#!/bin/sh
#steps while learning tutorial

ofile=tutorial.html #output file (ofile) when downloading web page
tutorial=https://wiki.crosswire.org/OSIS_Genbook

main() {
	case "$1" in
		"v") #open a tutorial file that compares with baptistconfession1689.bdt
			vim modu*/g*/r*/t*/tutorial.bdt
		;;
		"1") #download web page for tutorial
			curl -o "$ofile" "$tutorial"
		;;
		"2") #simple things ....
			printf '\nThis step required some manual deletion of all the content in the html file except the xml stuff; see script notes';
			#
			#Use vim to find and replace certain characters ...
			#replace &lt; to < and &gt; to > ...
			#In vim    :%s/&lt;/</g
			#now that only xml content is left, copy or move file to get an xml extension
				#cp $ofile tutorial.xml
		;;
		"3") #convert the genbook.xml to a SWORD module using xml2gbs. Required installation of libsword-utils
			#Uncertain what the outputs were *.idx, *.bdt, *.dat
			printf '\nsee shell script for descriptions'
			path1=modules/genbook/rawgenbook/tutorial
			#xml2gbs [-l] [-i] [-fT|-fO|-fE] <filename> [modname]
			#-l uses long div names in ThML files
			#-i exports to IMP format instead of creating a module [IMP format is for bibles with combined verses per section 3.3.1 vpl Format on https://www.crosswire.org/sword/develop/swordmodule/
			#-fO, -fT, and -fE will set the importer to expect OSIS, ThML, or TEI format respectively
			#(otherwise it attempts to autodetect)
			#Note: â†‘ Use under Linux. The Windows edition has an undiagnosed bug that is not likely to be fixed soon.
			#remove any old files, if present
			if ls $path1/*.dat 1> /dev/null 2>&1; then \rm $path1/*.dat; fi
			if ls $path1/*.bdt 1> /dev/null 2>&1; then \rm $path1/*.bdt; fi
			if ls $path1/*.idx 1> /dev/null 2>&1; then \rm $path1/*.idx; fi
			#\rm modules/*

			xml2gbs tutorial.xml $path1/tutorial
			;;
		"4") #zip the output from above for SWORD install manager (bishop app)
			if [ -f tutorial.zip ]; then \rm tutorial.zip; fi
			zip -r -D tutorial.zip mods.d modules
			;;
		"5") #optional, check the contents of zip file
				less tutorial.zip
			;;
      *)
        printf '\nunexpected argument %s, exiting.' "$1"
		exit 1
      ;;
    esac
  exit 0
} #end main

main "$@"; exit


