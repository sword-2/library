/** @mainpage mainpage - comparison of Gutenberg and BibleGateway


A Gutenberg text bible kjv was reformatted using manual and automated methods to divide it up into separate chapters. To minimize accidental errors, the content was partly checked with a shell script (sw/0). One goal of reformatting was to facilitate machine reading of the scriptures (verse per line format). The script in the sw directory was run on the command line with "./0 c". The script looped through all the kjv scriptures in the repo and compared each one to the same verse from biblegateway.com. The shell script reported results to the sub-folder sw/99-rpt/, which is summarized in a link at the end of this file.
<br>
Some changes were done on purpose like dividing a big text file to smaller chapter files, removing extra line breaks to achieve verse per line format, and removing Windows characters (CR + LF). While the Windows OS is powerful, this processing was done on Linux so the Windows characters were removed. Also, the names of some books were shortened to smaller names assumed to be understood. A sub-page link below describes this.

<br><br>
The shell script named 0 uses two C++ programs in the subfolder sw/c++ to extract a verse out of a web page. Any server interfaces that can send a raw verse without any extra content would eliminate such extra software. The make program has to be run to build the c++ code for the local machine. Installation of supporting libraries for make was skipped and was the Linux configuration. The software was fairly simple.
<br><br>

<br><br>
The shell script 0 is also capable of calculating md5 checksums for each chapter. The command to do it from the script directory was ./0 md5. It puts a md5 file in the sw directory. The hope of the checksum was to capture the configuration of scriptures so no more unexpected differences could be introduced. Of course, some of the observed differences need to be resolved first so the checksums don't have to be updated. This would be a work in progress.

<br><br>
A second shell script (sw/1) read all the resuls for a particular book and summarized the differences in another file caled summary.txt. This was done to reduce the number of files to open and close for each bible book. It compressed all the changes in separate files for each chapter to one file. Also, it skipped the verses that did not identify a change. The summary.txt was manually read to generate the majority of differences identified in the differences link below.

<br><br>
<table border=1><caption>Sub-pages</caption>
<tr><th>Name / Link</th></tr>
	<tr><td>\subpage differences-words "Differences in words / phrases"</td></tr>
	<tr><td>\subpage differences-case "Differences in case"</td></tr>
	<tr><td>\subpage differences-Names "Differences in book names"</td></tr>
	<tr><td>\subpage filesystem "files and directory overview"</td></tr>
	<tr><td>\subpage acronyms "Acronyms"</td></tr>
</table> 

*/
